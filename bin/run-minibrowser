#!/usr/bin/env python

from build_config import ConfigHelper
from subprocess import call
from subprocess import Popen
import os
import sys
import psutil

config_helper = ConfigHelper()

def main(argv):
  argParser = config_helper.get_argument_parser()
  options = argParser.parse_args()
  minibrowser = os.path.join(config_helper.get_webkit_dir(options), 'bin/MiniBrowser')

  if options.url:
    url = options.url.split()
  else:
    url = ['http://localhost:8000']

  environment = os.environ
  if options.weston:
    config_helper.set_weston_env_for_client(environment)

  if options.llvmpipe:
    config_helper.set_llvmpipe_env(environment)

  if options.pause:
    os.environ["WEBKIT2_PAUSE_WEB_PROCESS_ON_LAUNCH"] = "1"

  if options.scale != 0:
    isWestonRunning = False
    for proc in psutil.process_iter():
      if proc.name() == "weston":
        isWestonRunning = True

    if not isWestonRunning:
      mutterCmd = ["weston", '--socket=' + config_helper.wayland_socket, "--scale=" + str(options.scale), '--width=800', '--height=600']
      mutterProc = Popen(mutterCmd, stdin=None, stdout=None, stderr=None, close_fds=True)

    config_helper.set_weston_env_for_client(environment)

  if options.gdb:
    gdbinit = os.path.join(config_helper.resource_dir, "gdbinit")
    cmd = ["cgdb", "--", "-init-command", gdbinit, "--args", minibrowser] + url
  elif options.test:
    testRunner = os.path.join(config_helper.get_webkit_dir(options), 'bin/WebKitTestRunner')
    os.environ["TEST_RUNNER_INJECTED_BUNDLE_FILENAME"] = os.path.join(config_helper.get_webkit_dir(options), 'lib/libTestRunnerInjectedBundle.so')
    os.environ["TEST_RUNNER_TEST_PLUGIN_PATH"] = os.path.join(config_helper.get_webkit_dir(options), 'lib/plugins')
    cmd = [testRunner] + url
  else:
    cmd = [minibrowser] + url

  jhbuild_cmd = ["jhbuild", "-f", config_helper.jhbuildrc, "run"]
  jhbuild_cmd.extend(cmd)
  print jhbuild_cmd
  call(jhbuild_cmd)

if __name__ == '__main__':
  main(sys.argv)


